{"version":3,"sources":["components/utils/utils.js","components/Day.js","components/Week.js","App.js","serviceWorker.js","index.js"],"names":["utils","checkDays","props","dayIndex","daysInMonth","firstDayNumber","countWeek","Day","_ref","onDayClick","today","thisMonth","_this","month","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleModal","setState","prevState","modal","addComment","event","_this$props","daysState","editComment","targetDay","filter","day","comment","target","value","saveComment","state","haveComment","cancelledComment","_this$props2","setClassToday","_this$props3","getDate","id","editing","close","clickedCellId","prevProps","saveDaysState","_this$props4","updateDays","_this2","react_default","a","createElement","Math","random","className","onClick","Modal","isOpen","toggle","ModalHeader","placeholder","onChange","ModalFooter","Button","color","React","Component","Week","firstDay","dayNames","days","map","dayName","index","components_Day","App","currentMonthDays","copyDays","toConsumableArray","some","obj","push","objectSpread","getFirstDayMouth","_this$state","year","Date","getFirstDayNumber","_this$state2","getDay","getDaysInMonth","_this$state3","createWeek","mappingEl","week","ceil","components_Week","component","console","log","now","getFullYear","getMonth","monthNames","slice","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3ddbacd.chunk.js","sourcesContent":["const utils = {\r\n   checkDays\r\n};\r\n\r\n//\r\n// function getModile(modal, toggle,) {\r\n//     return <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n//         <ModalHeader toggle={this.toggle} >Modal title</ModalHeader>\r\n//\r\n//         <textarea placeholder={'type something'}\r\n//                   value={this.state.comment}\r\n//                   onChange={event=>this.addComment(event)}\r\n//         >{this.state.comment}\r\n//                                         </textarea>\r\n//\r\n//         <ModalFooter>\r\n//             <Button  color=\"primary\" onClick={()=>this.saveComment()}> Save</Button>{' '}\r\n//             <Button  color=\"secondary\" onClick={this.cancelledComment}>Cancel</Button>\r\n//         </ModalFooter>\r\n//     </Modal>\r\n// }\r\n\r\nfunction checkDays(props) {\r\n     let {dayIndex, daysInMonth, firstDayNumber, countWeek} = props;\r\n\r\n     if(dayIndex>daysInMonth+firstDayNumber-1){\r\n         return null;\r\n     }\r\n     if(countWeek===0 && dayIndex===firstDayNumber){\r\n         return dayIndex-firstDayNumber+1;\r\n     }\r\n\r\n     if(countWeek===0 && dayIndex>firstDayNumber){\r\n         return dayIndex-firstDayNumber+1;\r\n     }\r\n     if(countWeek!==0){\r\n         dayIndex ++;\r\n         return dayIndex-firstDayNumber;\r\n     }\r\n}\r\n\r\n\r\nexport default utils;","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport utils from './utils/utils'\r\n\r\nclass Day extends React.Component {\r\n\r\n    constructor({onDayClick,\r\n                    today,\r\n                    thisMonth,\r\n                    firstDayNumber,\r\n                    dayIndex,\r\n                    daysInMonth,\r\n                    month\r\n                }) {\r\n        super();\r\n        this.state = {\r\n            month: month,\r\n            id: dayIndex,\r\n            haveComment: false,\r\n            editing: false,\r\n            comment: null,\r\n            modal: false,\r\n            close: false,\r\n            clickedCellId: null\r\n        };\r\n    }\r\n\r\n\r\n    toggleModal = () => {\r\n            this.setState(prevState=>({modal: !prevState.modal}))\r\n    };\r\n\r\n\r\n\r\n    addComment = (event) => {\r\n\r\n        const{dayIndex , daysState, month, editComment} = this.props,\r\n            targetDay = daysState\r\n                .filter((day)=>(day['month'] === month) && (day['id'] === dayIndex));\r\n\r\n          if(targetDay[0]){\r\n              this.setState( {comment: event.target.value});\r\n              editComment(targetDay[0], event.target.value);\r\n          }\r\n          else this.setState( {comment: event.target.value} )\r\n\r\n       // event.target.value===''?\r\n            //this.setState( {comment: null,} ):\r\n\r\n    };\r\n\r\n    saveComment = () => {\r\n        if(this.state.comment) {\r\n            this.setState({\r\n                haveComment: true,\r\n            });\r\n        }\r\n\r\n        this.toggleModal();\r\n    };\r\n\r\n    cancelledComment = () => {\r\n        const{dayIndex , daysState, month } = this.props,\r\n             targetDay = daysState\r\n            .filter((day)=>(day['month'] === month) && (day['id'] === dayIndex));\r\n\r\n        let comment;\r\n\r\n        targetDay[0] ? comment = targetDay[0]['comment'] : comment = null;\r\n\r\n       this.setState({\r\n        haveComment: false,\r\n        comment: comment,\r\n        });\r\n\r\n        this.toggleModal();\r\n    };\r\n\r\n    setClassToday = ()=> {\r\n        let {dayIndex, firstDayNumber, today} = this.props;\r\n\r\n        if(today.getDate()===dayIndex-firstDayNumber+1){\r\n            return \"today\";\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if(this.state.haveComment !== prevState.haveComment){\r\n            this.props.saveDaysState(this.state);\r\n        }\r\n\r\n\r\n        const{dayIndex , daysState, month, updateDays} = this.props;\r\n        const targetMonth = daysState\r\n            .filter((day)=>(day['month'] === month));\r\n\r\n\r\n        if (this.props.month!==prevProps.month){\r\n            this.setState({\r\n                month: month,\r\n                id: dayIndex,\r\n                haveComment: false,\r\n                editing: false,\r\n                comment: null,\r\n                modal: false,\r\n                close: false,})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n         <td id={Math.random()}\r\n\r\n             className={this.setClassToday()}\r\n             onClick={(id)=>{\r\n                 this.toggleModal(id)\r\n             }}\r\n            >\r\n                { !this.state.modal ? this.state.comment? utils.checkDays(this.props)? utils.checkDays(this.props)+ this.state.comment: null : utils.checkDays(this.props):\r\n\r\n                    <Modal isOpen={this.state.modal} toggle={false} className={this.props.className}>\r\n                        <ModalHeader toggle={this.toggle} >Modal title</ModalHeader>\r\n\r\n                            <textarea placeholder={'type something'}\r\n                                      value={this.state.comment}\r\n                                      onChange={event=>this.addComment(event)}\r\n                            >{this.state.comment}\r\n                                        </textarea>\r\n\r\n                        <ModalFooter>\r\n                            <Button  color=\"primary\" onClick={this.saveComment}> Save </Button>{' '}\r\n                            <Button  color=\"secondary\" onClick={this.cancelledComment}> Cancel </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                }\r\n          </td>)\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Day;","import React from 'react';\r\nimport Day from './Day';\r\n\r\nfunction Week({\r\n               countWeek,\r\n               firstDay,\r\n               firstDayNumber,\r\n               dayNames,\r\n               onDayClick,\r\n               daysInMonth,\r\n               today,\r\n               month,\r\n               thisMonth,\r\n              saveDaysState,\r\n              daysState,\r\n              updateDays,\r\n              editComment\r\n}\r\n               ) {\r\n\r\n\r\n    const days = dayNames.map((dayName, index)=>{\r\n        return <Day dayIndex={(index + 1) + (countWeek * 7)}\r\n                    editComment={editComment}\r\n                    updateDays={updateDays}\r\n                    daysState={daysState}\r\n                    saveDaysState={saveDaysState}\r\n                    thisMonth={thisMonth}\r\n                    month={month}\r\n                    today={today}\r\n                    countWeek={countWeek}\r\n                    dayName={dayName}\r\n                    day={index+1}\r\n                    firstDay={firstDay}\r\n                    firstDayNumber={firstDayNumber}\r\n                    onDayClick = {onDayClick}\r\n                    daysInMonth = {daysInMonth}\r\n                />\r\n    });\r\n\r\n    return <tr>\r\n        {days}\r\n    </tr>\r\n\r\n}\r\n\r\nexport default Week;\r\n","import React from 'react';\nimport Week from './components/Week';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './App.css';\n\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n\n    const now = new Date();\n    this.state = {\n        year: now.getFullYear(),\n        month: now.getMonth(),\n        thisMonth:true,\n        today: new Date(now.getFullYear(), now.getMonth(), now.getDate()),\n        daysState: [],\n        dayNames: [\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n            'Sunday',\n       ],\n        monthNames: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\" ]\n    }\n  }\n\n    updateDays = (currentMonthDays) => {\n      this.setState({daysState: currentMonthDays})\n    };\n\n   saveDaysState =(day)=> {\n       let copyDays = [...this.state.daysState];\n\n       if(!copyDays.some((obj)=>obj['id']===day['id'] && obj['month']===day['month'])) {\n           copyDays.push({...day});\n           this.setState({daysState: copyDays})\n       }\n   };\n\n   editComment = (day, event)=>{\n       let copyDays = [...this.state.daysState];\n       let targetDay =  copyDays.filter((obj)=>obj['id']===day['id'] && obj['month']===day['month']);\n       targetDay[0]['comment'] = event;\n       if(event===''){\n           targetDay[0]['comment'] = null;\n           copyDays = copyDays.filter(day=>day['id']!==targetDay[0]['id']);\n       }\n       copyDays.map((obj)=>obj);\n       this.setState({daysState: copyDays});\n\n   };\n\n   getFirstDayMouth = () =>{\n      const {year, month} = this.state;\n      return new Date(year, month , 1).getDate();\n\n    };\n    getFirstDayNumber = () => {\n       const {year, month} = this.state;\n       return new Date(year, month , 1).getDay();\n   };\n\n    getDaysInMonth = () => {\n        const {year, month} = this.state;\n        return new Date(year, month+1, 0).getDate();\n    };\n\n    createWeek = () => {\n        let   firstDay = this.getFirstDayMouth(), //1\n              firstDayNumber =  this.getFirstDayNumber(), //6\n              daysInMonth = this.getDaysInMonth(); //30\n\n        const mappingEl = [];\n        let countWeek = 0;\n        let week = Math.ceil(daysInMonth/7);\n\n        if(firstDayNumber===0){\n            firstDayNumber = 7;\n        }\n\n        if( (firstDayNumber>6 && daysInMonth>=30) || (firstDayNumber > 3 && this.state.month === 1)){\n            week++;\n        }\n\n        while (week!==countWeek){\n            mappingEl.push(<Week\n                editComment={this.editComment}\n                updateDays={this.updateDays}\n                daysState={this.state.daysState}\n                thisMonth={this.state.thisMonth}\n                month = {this.state.month}\n                today = {this.state.today}\n                countWeek = {countWeek}\n                firstDay ={firstDay}\n                firstDayNumber = {firstDayNumber}\n                daysInMonth={daysInMonth}\n                dayNames={this.state.dayNames}\n                onDayClick={this.onDayClick}\n                saveDaysState={this.saveDaysState}\n            />);\n            countWeek++;\n        }\n         return mappingEl.map((component)=>component);\n    };\n\n    onDayClick = (id)=> {\n      console.log(id)\n    };\n\n    render(){\n        console.log(this.state.daysState)\n      return (\n          <div className=\"calendar-app\">\n              <header className=\"App-header\">\n                 <div className={\"calendar-caption\"}>\n\n                     <button\n                        onClick={()=>{\n                            if(this.state.month===0){\n                                return;\n                            }\n                            this.setState({month:this.state.month-1})\n                        }}\n                     >{'<'}</button>\n\n                     <div className={\"calendar-head\"}>\n                          <span>{this.state.year}</span>\n                          <span>{this.state.monthNames[this.state.month]}</span>\n                     </div>\n\n                     <button\n                         onClick={()=>{\n                             if(this.state.month===11){\n                                 return;\n                             }\n                             this.setState({month:this.state.month+1,\n                             })\n                         }}\n                     >{'>'}</button>\n                 </div>\n                  <table className={\"calendar-board\"}>\n                      <tr>\n                          {this.state.dayNames.map((dayName)=><th>{dayName.slice(0, 3)}</th>)}\n                      </tr>\n\n                    { this.createWeek() }\n                </table>\n              </header>\n          </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}