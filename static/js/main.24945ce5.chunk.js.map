{"version":3,"sources":["components/utils/utils.js","components/Day.js","components/Week.js","App.js","serviceWorker.js","index.js"],"names":["utils","checkDays","props","dayIndex","daysInMonth","firstDayNumber","countWeek","getTargetDay","daysState","month","filter","day","Day","_ref","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleModal","setState","prevState","modal","addComment","event","targetDay","value","target","state","haveComment","console","log","comment","editComment","saveComment","saveDaysState","cancelComment","cancel","editing","setClassToday","_this$props","today","getDate","setClassDayWithComment","id","prevProps","_this$props2","_this2","react_default","a","createElement","Math","random","className","onClick","Modal","isOpen","toggle","ModalHeader","placeholder","onChange","ModalFooter","Button","color","React","Component","Week","firstDay","dayNames","thisMonth","updateDays","days","map","dayName","index","components_Day","App","copyDays","toConsumableArray","some","obj","push","objectSpread","indexOf","getFirstDayMouth","_this$state","year","Date","getFirstDayNumber","_this$state2","getDay","getDaysInMonth","_this$state3","createWeek","mappingEl","week","ceil","components_Week","component","now","getFullYear","getMonth","monthNames","slice","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24945ce5.chunk.js","sourcesContent":["const utils = {\r\n    checkDays,\r\n    getTargetDay\r\n};\r\n\r\nfunction getTargetDay(props) {\r\n    const {dayIndex, daysState, month} = props,\r\n        targetDay = daysState.filter((day) => (day['month'] === month) && (day['id'] === dayIndex));\r\n    return targetDay[0];\r\n}\r\n\r\nfunction checkDays(props) {\r\n    let {dayIndex, daysInMonth, firstDayNumber, countWeek} = props;\r\n\r\n    if (dayIndex > daysInMonth + firstDayNumber - 1) {\r\n        return null;\r\n    }\r\n    if (countWeek === 0 && dayIndex === firstDayNumber) {\r\n        return dayIndex - firstDayNumber + 1;\r\n    }\r\n\r\n    if (countWeek === 0 && dayIndex > firstDayNumber) {\r\n        return dayIndex - firstDayNumber + 1;\r\n    }\r\n    if (countWeek !== 0) {\r\n        dayIndex++;\r\n        return dayIndex - firstDayNumber;\r\n    }\r\n}\r\n\r\nexport default utils;","import React from 'react';\r\nimport {Button, Modal, ModalHeader, ModalFooter} from 'reactstrap';\r\nimport utils from './utils/utils'\r\n\r\nclass Day extends React.Component {\r\n\r\n    constructor({month, dayIndex}) {\r\n        super();\r\n        this.state = {\r\n            month: month,\r\n            id: dayIndex,\r\n            comment: null,\r\n            haveComment: false,\r\n            modal: false,\r\n        };\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(prevState => ({modal: !prevState.modal}))\r\n    };\r\n\r\n    addComment = (event) => {\r\n        const targetDay = utils.getTargetDay(this.props);\r\n        let value = event.target.value;\r\n        if (value === '') {\r\n            value = null;\r\n        }\r\n\r\n        if (this.state.haveComment) {\r\n            console.log(this.state.comment, targetDay['comment'])\r\n            this.props.editComment(targetDay, event.target.value);\r\n        }\r\n\r\n        this.setState({comment: value});\r\n    };\r\n\r\n    saveComment = () => {\r\n        this.toggleModal();\r\n\r\n        if (this.state.comment) {\r\n            this.setState({haveComment: true,});\r\n            this.props.saveDaysState(this.state);\r\n\r\n        } else {\r\n            this.setState({haveComment: false,});\r\n        }\r\n\r\n    };\r\n\r\n    cancelComment = () => {\r\n        const targetDay = utils.getTargetDay(this.props);\r\n        if (targetDay) {\r\n            this.setState({cancel: true});\r\n            this.props.editComment(targetDay, this.state.comment, this.state.cancel)\r\n\r\n        } else {\r\n            this.setState({editing: false, comment: null});\r\n        }\r\n        this.toggleModal();\r\n    };\r\n\r\n    setClassToday = () => {\r\n        let {dayIndex, firstDayNumber, today} = this.props;\r\n\r\n        if (today.getDate() === dayIndex - firstDayNumber + 1) {\r\n            return \"today\";\r\n        }\r\n    };\r\n    setClassDayWithComment = () => {\r\n        if (this.state.comment) {\r\n            return \"comment\";\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        const {dayIndex, month} = this.props;\r\n        const targetDay = utils.getTargetDay(this.props);\r\n\r\n\r\n        if (targetDay && targetDay['comment'] !== this.state.comment) {\r\n            this.setState({\r\n                month: targetDay['month'],\r\n                id: targetDay['id'],\r\n                haveComment: true,\r\n                editing: false,\r\n                comment: targetDay['comment'],\r\n            })\r\n        }\r\n        if (this.props.month !== prevState.month) {\r\n            this.setState({\r\n                month: month,\r\n                id: dayIndex,\r\n                haveComment: false,\r\n                comment: null,\r\n                modal: false,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <td id={Math.random()}\r\n\r\n                className={this.state.haveComment ? this.setClassDayWithComment() + ' ' + this.setClassToday() :\r\n                    this.setClassToday()\r\n                }\r\n                onClick={(id) => {\r\n                    this.toggleModal(id)\r\n                }}\r\n            >\r\n                {!this.state.modal ? this.state.comment ? utils.checkDays(this.props) ? utils.checkDays(this.props) + this.state.comment : null : utils.checkDays(this.props) :\r\n\r\n                    <Modal isOpen={this.state.modal} toggle={false} className={this.props.className}>\r\n                        <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n\r\n                        <textarea placeholder={'type something'}\r\n                                  value={this.state.comment}\r\n                                  onChange={event => this.addComment(event)}\r\n                        >{this.state.comment}\r\n                                        </textarea>\r\n\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.saveComment}> Save </Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.cancelComment}> Cancel </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                }\r\n            </td>)\r\n    }\r\n}\r\n\r\n\r\nexport default Day;","import React from 'react';\r\nimport Day from './Day';\r\n\r\nfunction Week({\r\n                  countWeek,\r\n                  firstDay,\r\n                  firstDayNumber,\r\n                  dayNames,\r\n                  daysInMonth,\r\n                  today,\r\n                  month,\r\n                  thisMonth,\r\n                  saveDaysState,\r\n                  daysState,\r\n                  updateDays,\r\n                  editComment,\r\n                  cancelComment\r\n              }\r\n) {\r\n\r\n\r\n    const days = dayNames.map((dayName, index) => {\r\n        return <Day dayIndex={(index + 1) + (countWeek * 7)}\r\n                    cancelComment={cancelComment}\r\n                    editComment={editComment}\r\n                    updateDays={updateDays}\r\n                    daysState={daysState}\r\n                    saveDaysState={saveDaysState}\r\n                    thisMonth={thisMonth}\r\n                    month={month}\r\n                    today={today}\r\n                    countWeek={countWeek}\r\n                    dayName={dayName}\r\n                    day={index + 1}\r\n                    firstDay={firstDay}\r\n                    firstDayNumber={firstDayNumber}\r\n                    daysInMonth={daysInMonth}\r\n        />\r\n    });\r\n\r\n    return <tr> {days} </tr>\r\n\r\n}\r\n\r\nexport default Week;\r\n","import React from 'react';\nimport Week from './components/Week';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        const now = new Date();\n        this.state = {\n            year: now.getFullYear(),\n            month: now.getMonth(),\n            thisMonth: true,\n            today: new Date(now.getFullYear(), now.getMonth(), now.getDate()),\n            daysState: [],\n            dayNames: [\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Saturday',\n                'Sunday',\n            ],\n            monthNames: [\n                \"January\",\n                \"February\",\n                \"March\",\n                \"April\",\n                \"May\",\n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\"]\n        }\n    }\n\n    saveDaysState = (day) => {\n        let copyDays = [...this.state.daysState];\n\n        if (!copyDays.some((obj) => obj['id'] === day['id'] && obj['month'] === day['month'])) {\n            copyDays.push({...day});\n            this.setState({daysState: copyDays})\n        }\n    };\n\n    editComment = (day, value) => {\n        let copyDays = [...this.state.daysState];\n        let targetDay = copyDays.filter((obj) => obj['id'] === day['id'] && obj['month'] === day['month']);\n        targetDay[0]['comment'] = value;\n        if (value === '') {\n            targetDay[0]['comment'] = null;\n            copyDays = copyDays.filter(day => day['id'] !== targetDay[0]['id']);\n        }\n        copyDays.map((obj) => obj);\n        this.setState({daysState: copyDays});\n    };\n\n    cancelComment = (day, comment) => {\n        let copyDays = [...this.state.daysState];\n        let targetDay = copyDays.filter((obj) => obj['id'] === day['id'] && obj['month'] === day['month']);\n        const index = copyDays.indexOf(day);\n\n        copyDays[index]['comment'] = comment;\n\n        this.setState(({daysState: copyDays}));\n    };\n\n    getFirstDayMouth = () => {\n        const {year, month} = this.state;\n        return new Date(year, month, 1).getDate();\n\n    };\n    getFirstDayNumber = () => {\n        const {year, month} = this.state;\n        return new Date(year, month, 1).getDay();\n    };\n\n    getDaysInMonth = () => {\n        const {year, month} = this.state;\n        return new Date(year, month + 1, 0).getDate();\n    };\n\n    createWeek = () => {\n        let firstDay = this.getFirstDayMouth(), //1\n            firstDayNumber = this.getFirstDayNumber(), //6\n            daysInMonth = this.getDaysInMonth(); //30\n\n        const mappingEl = [];\n        let countWeek = 0;\n        let week = Math.ceil(daysInMonth / 7);\n\n        if (firstDayNumber === 0) {\n            firstDayNumber = 7;\n        }\n\n        if ((firstDayNumber > 6 && daysInMonth >= 30) || (firstDayNumber > 3 && this.state.month === 1)) {\n            week++;\n        }\n\n        while (week !== countWeek) {\n            mappingEl.push(<Week\n                cancelComment={this.cancelComment}\n                editComment={this.editComment}\n                daysState={this.state.daysState}\n                thisMonth={this.state.thisMonth}\n                month={this.state.month}\n                today={this.state.today}\n                countWeek={countWeek}\n                firstDay={firstDay}\n                firstDayNumber={firstDayNumber}\n                daysInMonth={daysInMonth}\n                dayNames={this.state.dayNames}\n                saveDaysState={this.saveDaysState}\n            />);\n            countWeek++;\n        }\n        return mappingEl.map((component) => component);\n    };\n\n    render() {\n        return (\n            <div className=\"calendar__app \">\n                <div className={\"calendar-caption\"}>\n                    <button\n                        onClick={() => {\n                            if (this.state.month === 0) {\n                                return;\n                            }\n                            this.setState({month: this.state.month - 1})\n                        }}\n                    >{'<'}</button>\n\n                    <div className={\"calendar-head\"}>\n                        <span>{this.state.year}</span>\n                        <span>{this.state.monthNames[this.state.month]}</span>\n                    </div>\n\n                    <button\n                        onClick={() => {\n                            if (this.state.month === 11) {\n                                return;\n                            }\n                            this.setState({\n                                month: this.state.month + 1,\n                            })\n                        }}\n                    >{'>'}</button>\n                </div>\n                <table className={\"calendar-board\"}>\n                    <tr>\n                        {this.state.dayNames.map((dayName) => <th>{dayName.slice(0, 3)}</th>)}\n                    </tr>\n\n                    {this.createWeek()}\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}